{"ast":null,"code":"var _jsxFileName = \"/Users/yamazakikouji/Desktop/ec-app/src/components/Header/HeaderMenus.jsx\";\nimport React, { useEffect } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { getProductsInCart } from '../../redux/users/selector';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { db } from '../../firebase/index';\nimport { fetchProductsInCart } from '../../redux/users/operations';\n\nconst HeaderMenus = props => {\n  const dispatch = useDispatch();\n  const selector = useSelector(state => state);\n  const uid = getUserId(selector);\n  let productsInCart = getProductsInCart(selector);\n  useEffect(() => {\n    const unsubscribe = db.collection('users').doc(uid).collection(cart).onSnapshot(snapshots => {\n      snapshots.docChanges().forEach(change => {\n        const product = change.doc.data();\n        const changeType = change.type;\n\n        switch (changeType) {\n          case 'added':\n            productsInCart.push(product);\n            break;\n\n          case 'modified':\n            const index = productsInCart.findIndex(product => product.cartId === change.doc.id);\n            product[index] = product;\n            break;\n\n          case 'remove':\n            productInCart = productInCart.filter(product => product.cartId !== change.doc.id);\n            break;\n\n          default:\n            break;\n        }\n      });\n      dispatch(fetchProductsInCart(productInCart));\n    });\n    return () => unsubscribe();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    badgeContent: productInCart.length,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ShoppingCartIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteBorderIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: event => props.handleDrawerToggle(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default HeaderMenus;","map":{"version":3,"sources":["/Users/yamazakikouji/Desktop/ec-app/src/components/Header/HeaderMenus.jsx"],"names":["React","useEffect","IconButton","Badge","ShoppingCartIcon","FavoriteBorderIcon","MenuIcon","getProductsInCart","useSelector","useDispatch","db","fetchProductsInCart","HeaderMenus","props","dispatch","selector","state","uid","getUserId","productsInCart","unsubscribe","collection","doc","cart","onSnapshot","snapshots","docChanges","forEach","change","product","data","changeType","type","push","index","findIndex","cartId","id","productInCart","filter","length","event","handleDrawerToggle"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,EAAT,QAAmB,sBAAnB;AACA,SAASC,mBAAT,QAAoC,8BAApC;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,QAAQ,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAZ,CAA5B;AACA,QAAMC,GAAG,GAAGC,SAAS,CAACH,QAAD,CAArB;AACA,MAAII,cAAc,GAAGZ,iBAAiB,CAACQ,QAAD,CAAtC;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMmB,WAAW,GAAGV,EAAE,CAACW,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BL,GAA3B,EAAgCI,UAAhC,CAA2CE,IAA3C,EACfC,UADe,CACJC,SAAS,IAAI;AACrBA,MAAAA,SAAS,CAACC,UAAV,GAAuBC,OAAvB,CAA+BC,MAAM,IAAI;AACrC,cAAMC,OAAO,GAAGD,MAAM,CAACN,GAAP,CAAWQ,IAAX,EAAhB;AACA,cAAMC,UAAU,GAAGH,MAAM,CAACI,IAA1B;;AAEA,gBAAOD,UAAP;AACI,eAAK,OAAL;AACIZ,YAAAA,cAAc,CAACc,IAAf,CAAoBJ,OAApB;AACA;;AACJ,eAAK,UAAL;AACI,kBAAMK,KAAK,GAAGf,cAAc,CAACgB,SAAf,CAAyBN,OAAO,IAAIA,OAAO,CAACO,MAAR,KAAmBR,MAAM,CAACN,GAAP,CAAWe,EAAlE,CAAd;AACAR,YAAAA,OAAO,CAACK,KAAD,CAAP,GAAiBL,OAAjB;AACA;;AACJ,eAAK,QAAL;AACIS,YAAAA,aAAa,GAAGA,aAAa,CAACC,MAAd,CAAqBV,OAAO,IAAIA,OAAO,CAACO,MAAR,KAAmBR,MAAM,CAACN,GAAP,CAAWe,EAA9D,CAAhB;AACA;;AACJ;AACI;AAZR;AAcH,OAlBD;AAmBAvB,MAAAA,QAAQ,CAACH,mBAAmB,CAAC2B,aAAD,CAApB,CAAR;AACH,KAtBe,CAApB;AAwBA,WAAO,MAAMlB,WAAW,EAAxB;AACH,GA1BQ,EA0BP,EA1BO,CAAT;AA4BA,sBACI,uDACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,YAAY,EAAEkB,aAAa,CAACE,MAAnC;AAA2C,IAAA,KAAK,EAAC,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,eAMI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANJ,eASI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAGC,KAAD,IAAW5B,KAAK,CAAC6B,kBAAN,CAAyBD,KAAzB,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CATJ,CADJ;AAeH,CAjDD;;AAmDA,eAAe7B,WAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { getProductsInCart } from '../../redux/users/selector';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { db } from '../../firebase/index';\nimport { fetchProductsInCart } from '../../redux/users/operations';\n\nconst HeaderMenus = (props) => {\n    const dispatch = useDispatch();\n    const selector = useSelector((state) => state);\n    const uid = getUserId(selector);\n    let productsInCart = getProductsInCart(selector);\n\n    useEffect(() => {\n        const unsubscribe = db.collection('users').doc(uid).collection(cart)\n            .onSnapshot(snapshots => {\n                snapshots.docChanges().forEach(change => {\n                    const product = change.doc.data()\n                    const changeType = change.type;\n\n                    switch(changeType){\n                        case 'added':\n                            productsInCart.push(product)\n                            break;\n                        case 'modified':\n                            const index = productsInCart.findIndex(product => product.cartId === change.doc.id)\n                            product[index] = product\n                            break;\n                        case 'remove':\n                            productInCart = productInCart.filter(product => product.cartId !== change.doc.id)\n                            break;\n                        default:\n                            break;\n                    }\n                })\n                dispatch(fetchProductsInCart(productInCart))\n            })\n\n        return () => unsubscribe()\n    },[]);\n\n    return(\n        <>\n            <IconButton>\n                <Badge badgeContent={productInCart.length} color=\"secondary\">\n                    <ShoppingCartIcon />\n                </Badge>\n            </IconButton>\n            <IconButton>\n                <FavoriteBorderIcon />\n            </IconButton>\n            <IconButton onClick={(event) => props.handleDrawerToggle(event)}>\n                <MenuIcon />\n            </IconButton>\n        </>\n    )\n};\n\nexport default HeaderMenus;"]},"metadata":{},"sourceType":"module"}