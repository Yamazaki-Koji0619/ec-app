{"ast":null,"code":"import _defineProperty from\"/Users/yamazakikouji/Desktop/ec-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React,{useCallback,useMemo}from'react';import{useDispatch,useSelector}from'react-redux';import{getProductsInCart}from'../redux/users/selector';import{makeStyles}from'@material-ui/styles';import{CartListItem}from'../components/Products';import List from'@material-ui/core/List';import Divider from'@material-ui/core/Divider';import{PrimaryButton,TextDetail}from'../components/UIkit';import{orderProduct}from'../redux/products/operations';var useStyles=makeStyles(function(theme){var _detailBox;return{detailBox:(_detailBox={margin:'0 auto'},_defineProperty(_detailBox,theme.breakpoints.down('sm'),{width:320}),_defineProperty(_detailBox,theme.breakpoints.up('sm'),{width:512}),_detailBox),orderBox:{border:'1px solid rgba(0,0,0,0.2)',borderRadius:4,boxShadow:'0 4px 2px 2px rgba(0,0,0,0.2)',height:256,margin:'24px auto 16px auto',padding:16,width:288}};});var OrderConfirm=function OrderConfirm(){var classes=useStyles();var dispatch=useDispatch();var selector=useSelector(function(state){return state;});var productsInCart=getProductsInCart(selector);var subtotal=useMemo(function(){return productsInCart.reduce(function(sum,product){return sum+=product.price;},0);},[productsInCart]);var shippingFee=subtotal>=10000?0:210;var tax=subtotal*0.1;var total=subtotal+shippingFee+tax;var order=useCallback(function(){dispatch(orderProduct(productsInCart,total));},[productsInCart,total,dispatch]);return/*#__PURE__*/React.createElement(\"section\",{className:\"c-section-wrapin\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"u-text__headline\"},\"\\u6CE8\\u6587\\u306E\\u78BA\\u8A8D\"),/*#__PURE__*/React.createElement(\"div\",{className:\"p-grid__row\"},/*#__PURE__*/React.createElement(\"div\",{className:classes.detailBox},/*#__PURE__*/React.createElement(List,null,productsInCart.length>0&&productsInCart.map(function(product){return/*#__PURE__*/React.createElement(CartListItem,{product:product,key:product.cartId});}))),/*#__PURE__*/React.createElement(\"div\",{className:classes.orderBox},/*#__PURE__*/React.createElement(TextDetail,{label:'商品合計',value:'¥'+subtotal.toLocaleString()}),/*#__PURE__*/React.createElement(TextDetail,{label:'消費税',value:'¥'+tax}),/*#__PURE__*/React.createElement(TextDetail,{label:'送料',value:'¥'+shippingFee.toLocaleString()}),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(TextDetail,{label:'合計(税込)',value:'¥'+total.toLocaleString()}),/*#__PURE__*/React.createElement(PrimaryButton,{label:\"注文する\",onClick:order}))));};export default OrderConfirm;","map":{"version":3,"sources":["/Users/yamazakikouji/Desktop/ec-app/src/templates/OrderConfirm.jsx"],"names":["React","useCallback","useMemo","useDispatch","useSelector","getProductsInCart","makeStyles","CartListItem","List","Divider","PrimaryButton","TextDetail","orderProduct","useStyles","theme","detailBox","margin","breakpoints","down","width","up","orderBox","border","borderRadius","boxShadow","height","padding","OrderConfirm","classes","dispatch","selector","state","productsInCart","subtotal","reduce","sum","product","price","shippingFee","tax","total","order","length","map","cartId","toLocaleString"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProductsInCart } from '../redux/users/selector';\nimport { makeStyles } from '@material-ui/styles';\nimport { CartListItem } from '../components/Products';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport { PrimaryButton, TextDetail } from '../components/UIkit';\nimport { orderProduct } from '../redux/products/operations';\n\nconst useStyles = makeStyles((theme) => ({\n    detailBox: {\n        margin: '0 auto',\n        [theme.breakpoints.down('sm')]: {\n            width: 320,\n        },\n        [theme.breakpoints.up('sm')]: {\n            width: 512\n        }\n    },\n    orderBox: {\n        border: '1px solid rgba(0,0,0,0.2)',\n        borderRadius: 4,\n        boxShadow: '0 4px 2px 2px rgba(0,0,0,0.2)',\n        height: 256,\n        margin: '24px auto 16px auto',\n        padding: 16,\n        width: 288\n    }\n}));\n\nconst OrderConfirm = () => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const selector = useSelector((state) => state);\n    const productsInCart = getProductsInCart(selector);\n\n    const subtotal = useMemo(() => {\n        return productsInCart.reduce((sum, product) => sum += product.price,  0)\n    },[productsInCart]);\n\n    const shippingFee = (subtotal >= 10000) ? 0 : 210;\n    const tax = subtotal * 0.1;\n    const total = subtotal + shippingFee + tax;\n\n    const order = useCallback(() => {\n        dispatch(orderProduct(productsInCart, total))\n    },[productsInCart, total,dispatch]) \n\n    return(\n        <section className=\"c-section-wrapin\">\n            <h2 className=\"u-text__headline\">注文の確認</h2>\n            <div className=\"p-grid__row\">\n                <div className={classes.detailBox}>\n                    <List>\n                        {productsInCart.length > 0 && (\n                            productsInCart.map(product => <CartListItem product={product} key={product.cartId} />)\n                        )}\n                    </List>\n                </div>\n                <div className={classes.orderBox}>\n                    <TextDetail label={'商品合計'} value={'¥' + subtotal.toLocaleString()} />\n                    <TextDetail label={'消費税'} value={'¥' + tax} />\n                    <TextDetail label={'送料'} value={'¥' + shippingFee.toLocaleString()} />\n                    <Divider />\n                    <TextDetail label={'合計(税込)'} value={'¥' + total.toLocaleString()} />\n                    <PrimaryButton label={\"注文する\"} onClick={order} />\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default OrderConfirm;"]},"metadata":{},"sourceType":"module"}