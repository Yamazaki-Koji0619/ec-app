{"ast":null,"code":"import { db, FirebaseTimestamp } from \"../../firebase\";\nimport { push } from \"connected-react-router\";\nimport { fetchProductsAction } from './actions';\nconst productsRef = db.collection('products');\nexport const fetchProducts = () => {\n  return async dispatch => {\n    productsRef.orderBy('updated_at', 'desc').get().then(snapshots => {\n      const productList = [];\n      snapshots.forEach(snapshot => {\n        const product = snapshot.data();\n        productList.push(product);\n      });\n      dispatch(fetchProductsAction(productList));\n    });\n  };\n};\nexport const saveProduct = (id, name, discription, category, gender, price, images, sizes) => {\n  return async dispatch => {\n    const timestamp = FirebaseTimestamp.now();\n    const data = {\n      category: category,\n      discription: discription,\n      gender: gender,\n      images: images,\n      name: name,\n      price: parseInt(price, 10),\n      sizes: sizes,\n      updated_at: timestamp\n    };\n\n    if (id === \"\") {\n      const ref = productsRef.doc();\n      id = ref.id;\n      data.id = id;\n      data.created_at = timestamp;\n    }\n\n    return productsRef.doc(id).set(data, {\n      merge: true\n    }).then(() => {\n      dispatch(push('/'));\n    }).catch(error => {\n      throw new Error(error);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/yamazakikouji/Desktop/ec-app/src/redux/products/operations.js"],"names":["db","FirebaseTimestamp","push","fetchProductsAction","productsRef","collection","fetchProducts","dispatch","orderBy","get","then","snapshots","productList","forEach","snapshot","product","data","saveProduct","id","name","discription","category","gender","price","images","sizes","timestamp","now","parseInt","updated_at","ref","doc","created_at","set","merge","catch","error","Error"],"mappings":"AAAA,SAASA,EAAT,EAAaC,iBAAb,QAAsC,gBAAtC;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,mBAAT,QAAoC,WAApC;AAEA,MAAMC,WAAW,GAAGJ,EAAE,CAACK,UAAH,CAAc,UAAd,CAApB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,SAAO,MAAMC,QAAN,IAAmB;AACtBH,IAAAA,WAAW,CAACI,OAAZ,CAAoB,YAApB,EAAiC,MAAjC,EAAyCC,GAAzC,GACKC,IADL,CACUC,SAAS,IAAI;AACf,YAAMC,WAAW,GAAG,EAApB;AACAD,MAAAA,SAAS,CAACE,OAAV,CAAkBC,QAAQ,IAAI;AAC1B,cAAMC,OAAO,GAAGD,QAAQ,CAACE,IAAT,EAAhB;AACAJ,QAAAA,WAAW,CAACV,IAAZ,CAAiBa,OAAjB;AACH,OAHD;AAIAR,MAAAA,QAAQ,CAACJ,mBAAmB,CAACS,WAAD,CAApB,CAAR;AACH,KARL;AASH,GAVD;AAWH,CAZM;AAcP,OAAO,MAAMK,WAAW,GAAG,CAACC,EAAD,EAAKC,IAAL,EAAWC,WAAX,EAAwBC,QAAxB,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,MAAjD,EAAyDC,KAAzD,KAAmE;AAC1F,SAAO,MAAMlB,QAAN,IAAmB;AACtB,UAAMmB,SAAS,GAAGzB,iBAAiB,CAAC0B,GAAlB,EAAlB;AAEA,UAAMX,IAAI,GAAG;AACTK,MAAAA,QAAQ,EAAEA,QADD;AAETD,MAAAA,WAAW,EAAEA,WAFJ;AAGTE,MAAAA,MAAM,EAAEA,MAHC;AAITE,MAAAA,MAAM,EAAEA,MAJC;AAKTL,MAAAA,IAAI,EAAEA,IALG;AAMTI,MAAAA,KAAK,EAAEK,QAAQ,CAACL,KAAD,EAAQ,EAAR,CANN;AAOTE,MAAAA,KAAK,EAAEA,KAPE;AAQTI,MAAAA,UAAU,EAAEH;AARH,KAAb;;AAWA,QAAGR,EAAE,KAAK,EAAV,EAAa;AACT,YAAMY,GAAG,GAAG1B,WAAW,CAAC2B,GAAZ,EAAZ;AACAb,MAAAA,EAAE,GAAGY,GAAG,CAACZ,EAAT;AACAF,MAAAA,IAAI,CAACE,EAAL,GAAUA,EAAV;AACAF,MAAAA,IAAI,CAACgB,UAAL,GAAkBN,SAAlB;AACH;;AAED,WAAOtB,WAAW,CAAC2B,GAAZ,CAAgBb,EAAhB,EAAoBe,GAApB,CAAwBjB,IAAxB,EAA8B;AAACkB,MAAAA,KAAK,EAAE;AAAR,KAA9B,EACFxB,IADE,CACG,MAAM;AACRH,MAAAA,QAAQ,CAACL,IAAI,CAAC,GAAD,CAAL,CAAR;AACH,KAHE,EAGAiC,KAHA,CAGOC,KAAD,IAAW;AAChB,YAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH,KALE,CAAP;AAMH,GA3BD;AA4BH,CA7BM","sourcesContent":["import { db, FirebaseTimestamp } from \"../../firebase\";\nimport { push } from \"connected-react-router\";\nimport { fetchProductsAction } from './actions';\n\nconst productsRef = db.collection('products');\n\nexport const fetchProducts = () => {\n    return async(dispatch) => {\n        productsRef.orderBy('updated_at','desc').get()\n            .then(snapshots => {\n                const productList = []\n                snapshots.forEach(snapshot => {\n                    const product = snapshot.data();\n                    productList.push(product)\n                })\n                dispatch(fetchProductsAction(productList))\n            })\n    }\n}\n\nexport const saveProduct = (id, name, discription, category, gender, price, images, sizes) => {\n    return async(dispatch) => {\n        const timestamp = FirebaseTimestamp.now()\n\n        const data = {\n            category: category,\n            discription: discription,\n            gender: gender,\n            images: images,\n            name: name,\n            price: parseInt(price, 10),\n            sizes: sizes,\n            updated_at: timestamp\n        }\n\n        if(id === \"\"){\n            const ref = productsRef.doc()\n            id = ref.id\n            data.id = id\n            data.created_at = timestamp\n        }\n\n        return productsRef.doc(id).set(data, {merge: true})\n            .then(() => {\n                dispatch(push('/'))\n            }).catch((error) => {\n                throw new Error(error)\n            })\n    }\n}"]},"metadata":{},"sourceType":"module"}