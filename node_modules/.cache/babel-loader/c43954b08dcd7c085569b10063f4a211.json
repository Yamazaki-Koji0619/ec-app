{"ast":null,"code":"import _slicedToArray from\"/Users/yamazakikouji/Desktop/ec-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useCallback}from'react';import{makeStyles}from'@material-ui/styles';import AppBar from'@material-ui/core/AppBar';import ToolBar from'@material-ui/core/Toolbar';import logo from'../../assets/img/logo.png';import{useDispatch,useSelector}from'react-redux';import{getSignedIn}from'../../redux/users/selector';import{push}from'connected-react-router';import{HeaderMenus,ClosableDrawer}from'./index';var useStyles=makeStyles({root:{flexGrow:1},menuBar:{backgroundColor:\"#fff\",color:\"#444\"},toolBar:{margin:\"0 auto\",maxWidth:1024,width:\"100%\"},iconButtons:{margin:\"0 0 0 auto\"}});var Header=function Header(){var classes=useStyles();var dispatch=useDispatch();var selector=useSelector(function(state){return state;});var isSignedIn=getSignedIn(selector);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var handleDrawerToggle=useCallback(function(event){if(event.type==='keydown'&&(event.key==='Tab'||event.key==='Shift')){return;}setOpen(!open);},[setOpen,open]);return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(AppBar,{potition:\"fixed\",className:classes.menuBar},/*#__PURE__*/React.createElement(ToolBar,{className:classes.toolBar},/*#__PURE__*/React.createElement(\"img\",{src:logo,alt:\"logo\",width:\"128px\",onClick:function onClick(){return dispatch(push('/ec-app'));}}),isSignedIn&&/*#__PURE__*/React.createElement(\"div\",{className:classes.iconButtons},/*#__PURE__*/React.createElement(HeaderMenus,{handleDrawerToggle:handleDrawerToggle})))),/*#__PURE__*/React.createElement(ClosableDrawer,{open:open,onClose:handleDrawerToggle}));};export default Header;","map":{"version":3,"sources":["/Users/yamazakikouji/Desktop/ec-app/src/components/Header/Header.jsx"],"names":["React","useState","useCallback","makeStyles","AppBar","ToolBar","logo","useDispatch","useSelector","getSignedIn","push","HeaderMenus","ClosableDrawer","useStyles","root","flexGrow","menuBar","backgroundColor","color","toolBar","margin","maxWidth","width","iconButtons","Header","classes","dispatch","selector","state","isSignedIn","open","setOpen","handleDrawerToggle","event","type","key"],"mappings":"0JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,WAA1B,KAA6C,OAA7C,CACA,OAASC,UAAT,KAA2B,qBAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,2BAAjB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,WAAT,KAA4B,4BAA5B,CACA,OAASC,IAAT,KAAqB,wBAArB,CACA,OAASC,WAAT,CAAsBC,cAAtB,KAA4C,SAA5C,CAEA,GAAMC,CAAAA,SAAS,CAAGV,UAAU,CAAC,CACzBW,IAAI,CAAE,CACFC,QAAQ,CAAE,CADR,CADmB,CAIzBC,OAAO,CAAE,CACLC,eAAe,CAAE,MADZ,CAELC,KAAK,CAAE,MAFF,CAJgB,CAQzBC,OAAO,CAAE,CACLC,MAAM,CAAE,QADH,CAELC,QAAQ,CAAE,IAFL,CAGLC,KAAK,CAAE,MAHF,CARgB,CAazBC,WAAW,CAAE,CACTH,MAAM,CAAE,YADC,CAbY,CAAD,CAA5B,CAkBA,GAAMI,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjB,GAAMC,CAAAA,OAAO,CAAGZ,SAAS,EAAzB,CACA,GAAMa,CAAAA,QAAQ,CAAGnB,WAAW,EAA5B,CACA,GAAMoB,CAAAA,QAAQ,CAAGnB,WAAW,CAAC,SAACoB,KAAD,QAAWA,CAAAA,KAAX,EAAD,CAA5B,CACA,GAAMC,CAAAA,UAAU,CAAGpB,WAAW,CAACkB,QAAD,CAA9B,CAJiB,cAMO1B,QAAQ,CAAC,KAAD,CANf,wCAMV6B,IANU,eAMJC,OANI,eAQjB,GAAMC,CAAAA,kBAAkB,CAAG9B,WAAW,CAAC,SAAC+B,KAAD,CAAW,CAC9C,GAAGA,KAAK,CAACC,IAAN,GAAe,SAAf,GAA6BD,KAAK,CAACE,GAAN,GAAc,KAAd,EAAuBF,KAAK,CAACE,GAAN,GAAa,OAAjE,CAAH,CAA6E,CACzE,OACH,CACDJ,OAAO,CAAC,CAACD,IAAF,CAAP,CACH,CALqC,CAKpC,CAACC,OAAD,CAAUD,IAAV,CALoC,CAAtC,CAOA,mBACI,2BAAK,SAAS,CAAEL,OAAO,CAACX,IAAxB,eACI,oBAAC,MAAD,EAAQ,QAAQ,CAAC,OAAjB,CAAyB,SAAS,CAAEW,OAAO,CAACT,OAA5C,eACI,oBAAC,OAAD,EAAS,SAAS,CAAES,OAAO,CAACN,OAA5B,eACI,2BACI,GAAG,CAAEb,IADT,CACe,GAAG,CAAC,MADnB,CAC0B,KAAK,CAAC,OADhC,CAEI,OAAO,CAAE,yBAAMoB,CAAAA,QAAQ,CAAChB,IAAI,CAAC,SAAD,CAAL,CAAd,EAFb,EADJ,CAKKmB,UAAU,eACP,2BAAK,SAAS,CAAEJ,OAAO,CAACF,WAAxB,eACI,oBAAC,WAAD,EAAa,kBAAkB,CAAES,kBAAjC,EADJ,CANR,CADJ,CADJ,cAcI,oBAAC,cAAD,EAAgB,IAAI,CAAEF,IAAtB,CAA4B,OAAO,CAAEE,kBAArC,EAdJ,CADJ,CAkBH,CAjCD,CAmCA,cAAeR,CAAAA,MAAf","sourcesContent":["import React, { useState, useCallback } from 'react' ;\nimport { makeStyles } from '@material-ui/styles'\nimport AppBar from '@material-ui/core/AppBar';\nimport ToolBar from '@material-ui/core/Toolbar';\nimport logo from '../../assets/img/logo.png';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getSignedIn } from '../../redux/users/selector';\nimport { push } from 'connected-react-router';\nimport { HeaderMenus, ClosableDrawer } from './index';\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n    menuBar: {\n        backgroundColor: \"#fff\",\n        color: \"#444\"\n    },\n    toolBar: {\n        margin: \"0 auto\",\n        maxWidth: 1024,\n        width: \"100%\"\n    },\n    iconButtons: {\n        margin: \"0 0 0 auto\"\n    }\n})\n\nconst Header = () => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const selector = useSelector((state) => state)\n    const isSignedIn = getSignedIn(selector);\n\n    const [open, setOpen] = useState(false);\n\n    const handleDrawerToggle = useCallback((event) => {\n        if(event.type === 'keydown' && (event.key === 'Tab' || event.key ==='Shift')){\n            return;\n        }\n        setOpen(!open)\n    },[setOpen, open]);\n\n    return(\n        <div className={classes.root}>\n            <AppBar potition=\"fixed\" className={classes.menuBar}>\n                <ToolBar className={classes.toolBar}>\n                    <img\n                        src={logo} alt=\"logo\" width=\"128px\"\n                        onClick={() => dispatch(push('/ec-app'))}\n                    />\n                    {isSignedIn && (\n                        <div className={classes.iconButtons}>\n                            <HeaderMenus handleDrawerToggle={handleDrawerToggle} />\n                        </div>\n                    )}\n                </ToolBar>\n            </AppBar>\n            <ClosableDrawer open={open} onClose={handleDrawerToggle} />\n        </div>\n    )\n};\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}