{"ast":null,"code":"var _jsxFileName = \"/Users/yamazakikouji/Desktop/ec-app/src/components/Header/HeaderMenus.jsx\";\nimport React, { useEffect } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { getProductsInCart, getUserId } from '../../redux/users/selector';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { db } from '../../firebase/index';\nimport { fetchProductsInCart, fetchProductsInLike } from '../../redux/users/operations';\nimport { push } from 'connected-react-router';\n\nconst HeaderMenus = props => {\n  const dispatch = useDispatch();\n  const selector = useSelector(state => state);\n  const uid = getUserId(selector);\n  let productsInCart = getProductsInCart(selector);\n\n  const changeType = change => {\n    const product = change.doc.data();\n    const changeType = change.type;\n\n    switch (changeType) {\n      case 'added':\n        productsInCart.push(product);\n        break;\n\n      case 'modified':\n        const index = productsInCart.findIndex(product => product.cartId === change.doc.id);\n        productsInCart[index] = product;\n        break;\n\n      case 'removed':\n        productsInCart = productsInCart.filter(product => product.cartId !== change.doc.id);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    const unsubscribe = db.collection('users').doc(uid).collection('cart').onSnapshot(snapshots => {\n      snapshots.docChanges().forEach(change => {\n        changeType(change);\n      });\n      dispatch(fetchProductsInCart(productsInCart));\n    });\n    return () => unsubscribe();\n  }, []);\n  useEffect(() => {\n    const unsubscribe = db.collection('users').doc(uid).collection('like').onSnapshot(snapshots => {\n      snapshots.docChanges().forEach(change => {\n        changeType(change);\n      });\n      dispatch(fetchProductsInLike(productsInCart));\n    });\n    return () => unsubscribe();\n  }, []); // useEffect(() => {\n  //     const unsubscribe = db.collection('users').doc(uid).collection('cart')\n  //         .onSnapshot(snapshots => {\n  //             snapshots.docChanges().forEach(change => {\n  //                 const product = change.doc.data()\n  //                 const changeType = change.type;\n  //                 switch(changeType){\n  //                     case 'added':\n  //                         productsInCart.push(product)\n  //                         break;\n  //                     case 'modified':\n  //                         const index = productsInCart.findIndex(product => product.cartId === change.doc.id)\n  //                         productsInCart[index] = product\n  //                         break;\n  //                     case 'removed':\n  //                         productsInCart = productsInCart.filter(product => product.cartId !== change.doc.id)\n  //                         break;\n  //                     default:\n  //                         break;\n  //                 }\n  //             })\n  //             dispatch(fetchProductsInCart(productsInCart))\n  //         })\n  //     return () => unsubscribe()\n  // },[]);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => dispatch(push('/cart')),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    badgeContent: productsInCart.length,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ShoppingCartIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => dispatch(push('/like')),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteBorderIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: event => props.handleDrawerToggle(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default HeaderMenus;","map":{"version":3,"sources":["/Users/yamazakikouji/Desktop/ec-app/src/components/Header/HeaderMenus.jsx"],"names":["React","useEffect","IconButton","Badge","ShoppingCartIcon","FavoriteBorderIcon","MenuIcon","getProductsInCart","getUserId","useSelector","useDispatch","db","fetchProductsInCart","fetchProductsInLike","push","HeaderMenus","props","dispatch","selector","state","uid","productsInCart","changeType","change","product","doc","data","type","index","findIndex","cartId","id","filter","unsubscribe","collection","onSnapshot","snapshots","docChanges","forEach","length","event","handleDrawerToggle"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { getProductsInCart, getUserId } from '../../redux/users/selector';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { db } from '../../firebase/index';\nimport { fetchProductsInCart, fetchProductsInLike } from '../../redux/users/operations';\nimport { push } from 'connected-react-router';\n\nconst HeaderMenus = (props) => {\n    const dispatch = useDispatch();\n    const selector = useSelector((state) => state);\n    const uid = getUserId(selector);\n    let productsInCart = getProductsInCart(selector);\n\n    const changeType = (change) => {\n        const product = change.doc.data()\n        const changeType = change.type;\n\n        switch(changeType){\n            case 'added':\n                productsInCart.push(product)\n                break;\n            case 'modified':\n                const index = productsInCart.findIndex(product => product.cartId === change.doc.id)\n                productsInCart[index] = product\n                break;\n            case 'removed':\n                productsInCart = productsInCart.filter(product => product.cartId !== change.doc.id)\n                break;\n            default:\n                break;\n        }\n    }\n\n    useEffect(() => {\n        const unsubscribe = db.collection('users').doc(uid).collection('cart')\n            .onSnapshot(snapshots => {\n                snapshots.docChanges().forEach(change => {changeType(change)})\n                dispatch(fetchProductsInCart(productsInCart))\n            })\n        return () => unsubscribe()\n    },[]);\n\n    useEffect(() => {\n        const unsubscribe = db.collection('users').doc(uid).collection('like')\n            .onSnapshot(snapshots => {\n                snapshots.docChanges().forEach(change => {changeType(change)})\n                dispatch(fetchProductsInLike(productsInCart))\n            })\n        return () => unsubscribe()\n    },[]);\n\n    // useEffect(() => {\n    //     const unsubscribe = db.collection('users').doc(uid).collection('cart')\n    //         .onSnapshot(snapshots => {\n    //             snapshots.docChanges().forEach(change => {\n    //                 const product = change.doc.data()\n    //                 const changeType = change.type;\n\n    //                 switch(changeType){\n    //                     case 'added':\n    //                         productsInCart.push(product)\n    //                         break;\n    //                     case 'modified':\n    //                         const index = productsInCart.findIndex(product => product.cartId === change.doc.id)\n    //                         productsInCart[index] = product\n    //                         break;\n    //                     case 'removed':\n    //                         productsInCart = productsInCart.filter(product => product.cartId !== change.doc.id)\n    //                         break;\n    //                     default:\n    //                         break;\n    //                 }\n    //             })\n    //             dispatch(fetchProductsInCart(productsInCart))\n    //         })\n\n    //     return () => unsubscribe()\n    // },[]);\n\n    return(\n        <>\n            <IconButton onClick={() => dispatch(push('/cart'))}>\n                <Badge badgeContent={productsInCart.length} color=\"secondary\">\n                    <ShoppingCartIcon />\n                </Badge>\n            </IconButton>\n            <IconButton onClick={() => dispatch(push('/like'))}>\n                <FavoriteBorderIcon />\n            </IconButton>\n            <IconButton onClick={(event) => props.handleDrawerToggle(event)}>\n                <MenuIcon />\n            </IconButton>\n        </>\n    )\n};\n\nexport default HeaderMenus;"]},"metadata":{},"sourceType":"module"}