{"ast":null,"code":"var _jsxFileName = \"/Users/yamazakikouji/Desktop/ec-app/src/components/Header/HeaderMenus.jsx\";\nimport React, { useEffect } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { getProductsInCart, getUserId } from '../../redux/users/selector';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { db } from '../../firebase/index';\nimport { fetchProductsInCart } from '../../redux/users/operations';\nimport { push } from 'connected-react-router';\n\nconst HeaderMenus = props => {\n  const dispatch = useDispatch();\n  const selector = useSelector(state => state);\n  const uid = getUserId(selector);\n  let productsInCart = getProductsInCart(selector);\n  const unsubscribe = db.collection('users').doc(uid).collection(collectionId).onSnapshot(snapshots => {\n    snapshots.docChanges().forEach(change => {\n      const product = change.doc.data();\n      const changeType = change.type;\n\n      switch (changeType) {\n        case 'added':\n          productsInCart.push(product);\n          break;\n\n        case 'modified':\n          const index = productsInCart.findIndex(product => product.cartId === change.doc.id);\n          productsInCart[index] = product;\n          break;\n\n        case 'removed':\n          productsInCart = productsInCart.filter(product => product.cartId !== change.doc.id);\n          break;\n\n        default:\n          break;\n      }\n    });\n    dispatch(fetch(productsInCart));\n  });\n  return () => unsubscribe();\n  useEffect(() => {\n    collectionId = 'cart';\n    fetch = fetchProductsInCart();\n    unsubscribe;\n  }, []); // useEffect(() => {\n  //     const unsubscribe = db.collection('users').doc(uid).collection('cart')\n  //         .onSnapshot(snapshots => {\n  //             snapshots.docChanges().forEach(change => {\n  //                 const product = change.doc.data()\n  //                 const changeType = change.type;\n  //                 switch(changeType){\n  //                     case 'added':\n  //                         productsInCart.push(product)\n  //                         break;\n  //                     case 'modified':\n  //                         const index = productsInCart.findIndex(product => product.cartId === change.doc.id)\n  //                         productsInCart[index] = product\n  //                         break;\n  //                     case 'removed':\n  //                         productsInCart = productsInCart.filter(product => product.cartId !== change.doc.id)\n  //                         break;\n  //                     default:\n  //                         break;\n  //                 }\n  //             })\n  //             dispatch(fetchProductsInCart(productsInCart))\n  //         })\n  //     return () => unsubscribe()\n  // },[]);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => dispatch(push('/cart')),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    badgeContent: productsInCart.length,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ShoppingCartIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => dispatch(push('/like')),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteBorderIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: event => props.handleDrawerToggle(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default HeaderMenus;","map":{"version":3,"sources":["/Users/yamazakikouji/Desktop/ec-app/src/components/Header/HeaderMenus.jsx"],"names":["React","useEffect","IconButton","Badge","ShoppingCartIcon","FavoriteBorderIcon","MenuIcon","getProductsInCart","getUserId","useSelector","useDispatch","db","fetchProductsInCart","push","HeaderMenus","props","dispatch","selector","state","uid","productsInCart","unsubscribe","collection","doc","collectionId","onSnapshot","snapshots","docChanges","forEach","change","product","data","changeType","type","index","findIndex","cartId","id","filter","fetch","length","event","handleDrawerToggle"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { getProductsInCart, getUserId } from '../../redux/users/selector';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { db } from '../../firebase/index';\nimport { fetchProductsInCart } from '../../redux/users/operations';\nimport { push } from 'connected-react-router';\n\nconst HeaderMenus = (props) => {\n    const dispatch = useDispatch();\n    const selector = useSelector((state) => state);\n    const uid = getUserId(selector);\n    let productsInCart = getProductsInCart(selector);\n\n    const unsubscribe = db.collection('users').doc(uid).collection(collectionId)\n            .onSnapshot(snapshots => {\n                snapshots.docChanges().forEach(change => {\n                    const product = change.doc.data()\n                    const changeType = change.type;\n\n                    switch(changeType){\n                        case 'added':\n                            productsInCart.push(product)\n                            break;\n                        case 'modified':\n                            const index = productsInCart.findIndex(product => product.cartId === change.doc.id)\n                            productsInCart[index] = product\n                            break;\n                        case 'removed':\n                            productsInCart = productsInCart.filter(product => product.cartId !== change.doc.id)\n                            break;\n                        default:\n                            break;\n                    }\n                })\n                dispatch(fetch(productsInCart))\n            })\n\n        return () => unsubscribe();\n\n    useEffect(() => {\n        collectionId = 'cart';\n        fetch = fetchProductsInCart()\n        unsubscribe\n    },[]);\n\n    // useEffect(() => {\n    //     const unsubscribe = db.collection('users').doc(uid).collection('cart')\n    //         .onSnapshot(snapshots => {\n    //             snapshots.docChanges().forEach(change => {\n    //                 const product = change.doc.data()\n    //                 const changeType = change.type;\n\n    //                 switch(changeType){\n    //                     case 'added':\n    //                         productsInCart.push(product)\n    //                         break;\n    //                     case 'modified':\n    //                         const index = productsInCart.findIndex(product => product.cartId === change.doc.id)\n    //                         productsInCart[index] = product\n    //                         break;\n    //                     case 'removed':\n    //                         productsInCart = productsInCart.filter(product => product.cartId !== change.doc.id)\n    //                         break;\n    //                     default:\n    //                         break;\n    //                 }\n    //             })\n    //             dispatch(fetchProductsInCart(productsInCart))\n    //         })\n\n    //     return () => unsubscribe()\n    // },[]);\n\n    return(\n        <>\n            <IconButton onClick={() => dispatch(push('/cart'))}>\n                <Badge badgeContent={productsInCart.length} color=\"secondary\">\n                    <ShoppingCartIcon />\n                </Badge>\n            </IconButton>\n            <IconButton onClick={() => dispatch(push('/like'))}>\n                <FavoriteBorderIcon />\n            </IconButton>\n            <IconButton onClick={(event) => props.handleDrawerToggle(event)}>\n                <MenuIcon />\n            </IconButton>\n        </>\n    )\n};\n\nexport default HeaderMenus;"]},"metadata":{},"sourceType":"module"}