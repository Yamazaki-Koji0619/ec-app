{"ast":null,"code":"import React,{useEffect}from'react';import IconButton from'@material-ui/core/IconButton';import Badge from'@material-ui/core/Badge';import ShoppingCartIcon from'@material-ui/icons/ShoppingCart';import FavoriteBorderIcon from'@material-ui/icons/FavoriteBorder';import MenuIcon from'@material-ui/icons/Menu';import{getProductsInCart,getProductsInLike,getUserId}from'../../redux/users/selector';import{useSelector,useDispatch}from'react-redux';import{db}from'../../firebase/index';import{fetchProductsInCart,fetchProductsInLike}from'../../redux/users/operations';import{push}from'connected-react-router';var HeaderMenus=function HeaderMenus(props){var dispatch=useDispatch();var selector=useSelector(function(state){return state;});var uid=getUserId(selector);var productsInCart=getProductsInCart(selector);var productsInLike=getProductsInLike(selector);useEffect(function(){var unsubscribe=db.collection('users').doc(uid).collection('cart').onSnapshot(function(snapshots){snapshots.docChanges().forEach(function(change){var product=change.doc.data();var changeType=change.type;switch(changeType){case'added':productsInCart.push(product);break;case'modified':var index=productsInCart.findIndex(function(product){return product.cartId===change.doc.id;});productsInCart[index]=product;break;case'removed':productsInCart=productsInCart.filter(function(product){return product.cartId!==change.doc.id;});break;default:break;}});dispatch(fetchProductsInCart(productsInCart));});return function(){return unsubscribe();};},[]);useEffect(function(){var unsubscribe=db.collection('users').doc(uid).collection('like').onSnapshot(function(snapshots){snapshots.docChanges().forEach(function(change){var product=change.doc.data();var changeType=change.type;switch(changeType){case'added':productsInLike.push(product);break;case'modified':var index=productsInLike.findIndex(function(product){return product.likeId===change.doc.id;});productsInLike[index]=product;break;case'removed':productsInLike=productsInLike.filter(function(product){return product.likeId!==change.doc.id;});break;default:break;}});dispatch(fetchProductsInLike(productsInLike));});return function(){return unsubscribe();};},[]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(IconButton,{onClick:function onClick(){return dispatch(push('/cart'));}},/*#__PURE__*/React.createElement(Badge,{badgeContent:productsInCart.length,color:\"secondary\"},/*#__PURE__*/React.createElement(ShoppingCartIcon,null))),/*#__PURE__*/React.createElement(IconButton,{onClick:function onClick(){return dispatch(push('/like'));}},/*#__PURE__*/React.createElement(Badge,{badgeContent:productsInLike.length,color:\"secondary\"},/*#__PURE__*/React.createElement(FavoriteBorderIcon,null))),/*#__PURE__*/React.createElement(IconButton,{onClick:function onClick(event){return props.handleDrawerToggle(event);}},/*#__PURE__*/React.createElement(MenuIcon,null)));};export default HeaderMenus;","map":{"version":3,"sources":["/Users/yamazakikouji/Desktop/ec-app/src/components/Header/HeaderMenus.jsx"],"names":["React","useEffect","IconButton","Badge","ShoppingCartIcon","FavoriteBorderIcon","MenuIcon","getProductsInCart","getProductsInLike","getUserId","useSelector","useDispatch","db","fetchProductsInCart","fetchProductsInLike","push","HeaderMenus","props","dispatch","selector","state","uid","productsInCart","productsInLike","unsubscribe","collection","doc","onSnapshot","snapshots","docChanges","forEach","change","product","data","changeType","type","index","findIndex","cartId","id","filter","likeId","length","event","handleDrawerToggle"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { getProductsInCart, getProductsInLike, getUserId } from '../../redux/users/selector';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { db } from '../../firebase/index';\nimport { fetchProductsInCart, fetchProductsInLike } from '../../redux/users/operations';\nimport { push } from 'connected-react-router';\n\nconst HeaderMenus = (props) => {\n    const dispatch = useDispatch();\n    const selector = useSelector((state) => state);\n    const uid = getUserId(selector);\n    let productsInCart = getProductsInCart(selector);\n    let productsInLike = getProductsInLike(selector); \n\n    useEffect(() => {\n        const unsubscribe = db.collection('users').doc(uid).collection('cart')\n            .onSnapshot(snapshots => {\n                snapshots.docChanges().forEach(change => {\n                    const product = change.doc.data()\n                    const changeType = change.type;\n\n                    switch(changeType){\n                        case 'added':\n                            productsInCart.push(product)\n                            break;\n                        case 'modified':\n                            const index = productsInCart.findIndex(product => product.cartId === change.doc.id)\n                            productsInCart[index] = product\n                            break;\n                        case 'removed':\n                            productsInCart = productsInCart.filter(product => product.cartId !== change.doc.id)\n                            break;\n                        default:\n                            break;\n                    }\n                })\n                dispatch(fetchProductsInCart(productsInCart))\n            })\n\n        return () => unsubscribe()\n    },[]);\n\n    useEffect(() => {\n        const unsubscribe = db.collection('users').doc(uid).collection('like')\n            .onSnapshot(snapshots => {\n                snapshots.docChanges().forEach(change => {\n                    const product = change.doc.data()\n                    const changeType = change.type;\n\n                    switch(changeType){\n                        case 'added':\n                            productsInLike.push(product)\n                            break;\n                        case 'modified':\n                            const index = productsInLike.findIndex(product => product.likeId === change.doc.id)\n                            productsInLike[index] = product\n                            break;\n                        case 'removed':\n                            productsInLike = productsInLike.filter(product => product.likeId !== change.doc.id)\n                            break;\n                        default:\n                            break;\n                    }\n                })\n                dispatch(fetchProductsInLike(productsInLike))\n            })\n\n        return () => unsubscribe()\n    },[]);\n\n    return(\n        <>\n            <IconButton onClick={() => dispatch(push('/cart'))}>\n                <Badge badgeContent={productsInCart.length} color=\"secondary\">\n                    <ShoppingCartIcon />\n                </Badge>\n            </IconButton>\n            <IconButton onClick={() => dispatch(push('/like'))}>\n                <Badge badgeContent={productsInLike.length} color=\"secondary\">\n                    <FavoriteBorderIcon />\n                </Badge>\n            </IconButton>\n            <IconButton onClick={(event) => props.handleDrawerToggle(event)}>\n                <MenuIcon />\n            </IconButton>\n        </>\n    )\n};\n\nexport default HeaderMenus;"]},"metadata":{},"sourceType":"module"}