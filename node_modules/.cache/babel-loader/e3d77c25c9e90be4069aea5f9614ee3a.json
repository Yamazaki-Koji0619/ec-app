{"ast":null,"code":"import { db, FirebaseTimestamp } from \"../../firebase\";\nimport { push } from \"connected-react-router\";\nconst productsRef = db.collection('products');\nexport const saveProduct = (id, name, discription, category, gender, price, images, sizes) => {\n  return async dispatch => {\n    const timestamp = FirebaseTimestamp.now();\n    const data = {\n      category: category,\n      discription: discription,\n      gender: gender,\n      images: images,\n      name: name,\n      price: parseInt(price, 10),\n      sizes: sizes,\n      updated_at: timestamp\n    };\n\n    if (id === \"\") {\n      const ref = productsRef.doc();\n      id = ref.id;\n      data.id = id;\n      data.created_at = timestamp;\n    }\n\n    return productsRef.doc(id).set(data, {\n      merge: true\n    }).then(() => {\n      dispatch(push('/'));\n    }).catch(error => {\n      throw new Error(error);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/yamazakikouji/Desktop/ec-app/src/redux/products/operations.js"],"names":["db","FirebaseTimestamp","push","productsRef","collection","saveProduct","id","name","discription","category","gender","price","images","sizes","dispatch","timestamp","now","data","parseInt","updated_at","ref","doc","created_at","set","merge","then","catch","error","Error"],"mappings":"AAAA,SAASA,EAAT,EAAaC,iBAAb,QAAsC,gBAAtC;AACA,SAASC,IAAT,QAAqB,wBAArB;AAEA,MAAMC,WAAW,GAAGH,EAAE,CAACI,UAAH,CAAc,UAAd,CAApB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,EAAD,EAAKC,IAAL,EAAWC,WAAX,EAAwBC,QAAxB,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,MAAjD,EAAwDC,KAAxD,KAAkE;AACzF,SAAO,MAAMC,QAAN,IAAmB;AACtB,UAAMC,SAAS,GAAGd,iBAAiB,CAACe,GAAlB,EAAlB;AAEA,UAAMC,IAAI,GAAG;AACTR,MAAAA,QAAQ,EAAEA,QADD;AAETD,MAAAA,WAAW,EAAEA,WAFJ;AAGTE,MAAAA,MAAM,EAAEA,MAHC;AAITE,MAAAA,MAAM,EAAEA,MAJC;AAKTL,MAAAA,IAAI,EAAEA,IALG;AAMTI,MAAAA,KAAK,EAAEO,QAAQ,CAACP,KAAD,EAAQ,EAAR,CANN;AAOTE,MAAAA,KAAK,EAAEA,KAPE;AAQTM,MAAAA,UAAU,EAAEJ;AARH,KAAb;;AAWA,QAAGT,EAAE,KAAK,EAAV,EAAa;AACT,YAAMc,GAAG,GAAGjB,WAAW,CAACkB,GAAZ,EAAZ;AACAf,MAAAA,EAAE,GAAGc,GAAG,CAACd,EAAT;AACAW,MAAAA,IAAI,CAACX,EAAL,GAAUA,EAAV;AACAW,MAAAA,IAAI,CAACK,UAAL,GAAkBP,SAAlB;AACH;;AAED,WAAOZ,WAAW,CAACkB,GAAZ,CAAgBf,EAAhB,EAAoBiB,GAApB,CAAwBN,IAAxB,EAA8B;AAACO,MAAAA,KAAK,EAAE;AAAR,KAA9B,EACFC,IADE,CACG,MAAM;AACRX,MAAAA,QAAQ,CAACZ,IAAI,CAAC,GAAD,CAAL,CAAR;AACH,KAHE,EAGAwB,KAHA,CAGOC,KAAD,IAAW;AAChB,YAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH,KALE,CAAP;AAMH,GA3BD;AA4BH,CA7BM","sourcesContent":["import { db, FirebaseTimestamp } from \"../../firebase\";\nimport { push } from \"connected-react-router\";\n\nconst productsRef = db.collection('products');\n\nexport const saveProduct = (id, name, discription, category, gender, price, images,sizes) => {\n    return async(dispatch) => {\n        const timestamp = FirebaseTimestamp.now()\n\n        const data = {\n            category: category,\n            discription: discription,\n            gender: gender,\n            images: images,\n            name: name,\n            price: parseInt(price, 10),\n            sizes: sizes,\n            updated_at: timestamp\n        }\n\n        if(id === \"\"){\n            const ref = productsRef.doc()\n            id = ref.id\n            data.id = id\n            data.created_at = timestamp\n        }\n\n        return productsRef.doc(id).set(data, {merge: true})\n            .then(() => {\n                dispatch(push('/'))\n            }).catch((error) => {\n                throw new Error(error)\n            })\n    }\n}"]},"metadata":{},"sourceType":"module"}