{"ast":null,"code":"var _jsxFileName = \"/Users/yamazakikouji/Desktop/ec-app/src/templates/OrderConfirm.jsx\";\nimport React, { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProductsInCart } from '../redux/users/selector';\nimport { makeStyles } from '@material-ui/styles';\nimport { CartListItem } from '../components/Products';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport { PrimaryButton, TextDetail } from '../components/UIkit';\nimport { orderProduct } from '../redux/products/operations';\nconst useStyles = makeStyles(theme => ({\n  detailBox: {\n    margin: '0 auto',\n    [theme.breakpoints.down('sm')]: {\n      width: 320\n    },\n    [theme.breakpoints.up('sm')]: {\n      width: 512\n    }\n  },\n  orderBox: {\n    border: '1px solid rgba(0,0,0,0.2)',\n    borderRadius: 4,\n    boxShadow: '0 4px 2px 2px rgba(0,0,0,0.2)',\n    height: 256,\n    margin: '24px auto 16px auto',\n    padding: 16,\n    width: 288\n  }\n}));\n\nconst OrderConfirm = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const selector = useSelector(state => state);\n  const productsInCart = getProductsInCart(selector);\n  const subtotal = useMemo(() => {\n    return productsInCart.reduce((sum, product) => sum += product.price, 0);\n  }, [productsInCart]);\n  const shippingFee = subtotal >= 10000 ? 0 : 210;\n  const tax = subtotal * 0.1;\n  const total = subtotal + shippingFee + tax;\n  const order = useCallback(() => {\n    dispatch(orderProduct(productsInCart, total));\n  }, [productsInCart, total]);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"c-section-wrapin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"u-text__headline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"\\u6CE8\\u6587\\u306E\\u78BA\\u8A8D\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-grid__row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.detailBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, productsInCart.length > 0 && productsInCart.map(product => /*#__PURE__*/React.createElement(CartListItem, {\n    product: product,\n    key: product.cartId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 59\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.orderBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextDetail, {\n    label: '商品合計',\n    value: '¥' + subtotal.toLocaleString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextDetail, {\n    label: '消費税',\n    value: '¥' + tax,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextDetail, {\n    label: '送料',\n    value: '¥' + shippingFee.toLocaleString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextDetail, {\n    label: '合計(税込)',\n    value: '¥' + total.toLocaleString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(PrimaryButton, {\n    label: \"注文する\",\n    onClick: order,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default OrderConfirm;","map":{"version":3,"sources":["/Users/yamazakikouji/Desktop/ec-app/src/templates/OrderConfirm.jsx"],"names":["React","useCallback","useMemo","useDispatch","useSelector","getProductsInCart","makeStyles","CartListItem","List","Divider","PrimaryButton","TextDetail","orderProduct","useStyles","theme","detailBox","margin","breakpoints","down","width","up","orderBox","border","borderRadius","boxShadow","height","padding","OrderConfirm","classes","dispatch","selector","state","productsInCart","subtotal","reduce","sum","product","price","shippingFee","tax","total","order","length","map","cartId","toLocaleString"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProductsInCart } from '../redux/users/selector';\nimport { makeStyles } from '@material-ui/styles';\nimport { CartListItem } from '../components/Products';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport { PrimaryButton, TextDetail } from '../components/UIkit';\nimport { orderProduct } from '../redux/products/operations';\n\nconst useStyles = makeStyles((theme) => ({\n    detailBox: {\n        margin: '0 auto',\n        [theme.breakpoints.down('sm')]: {\n            width: 320,\n        },\n        [theme.breakpoints.up('sm')]: {\n            width: 512\n        }\n    },\n    orderBox: {\n        border: '1px solid rgba(0,0,0,0.2)',\n        borderRadius: 4,\n        boxShadow: '0 4px 2px 2px rgba(0,0,0,0.2)',\n        height: 256,\n        margin: '24px auto 16px auto',\n        padding: 16,\n        width: 288\n    }\n}));\n\nconst OrderConfirm = () => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const selector = useSelector((state) => state);\n    const productsInCart = getProductsInCart(selector);\n\n    const subtotal = useMemo(() => {\n        return productsInCart.reduce((sum, product) => sum += product.price,  0)\n    },[productsInCart]);\n\n    const shippingFee = (subtotal >= 10000) ? 0 : 210;\n    const tax = subtotal * 0.1;\n    const total = subtotal + shippingFee + tax;\n\n    const order = useCallback(() => {\n        dispatch(orderProduct(productsInCart, total))\n    },[productsInCart, total]) \n\n    return(\n        <section className=\"c-section-wrapin\">\n            <h2 className=\"u-text__headline\">注文の確認</h2>\n            <div className=\"p-grid__row\">\n                <div className={classes.detailBox}>\n                    <List>\n                        {productsInCart.length > 0 && (\n                            productsInCart.map(product => <CartListItem product={product} key={product.cartId} />)\n                        )}\n                    </List>\n                </div>\n                <div className={classes.orderBox}>\n                    <TextDetail label={'商品合計'} value={'¥' + subtotal.toLocaleString()} />\n                    <TextDetail label={'消費税'} value={'¥' + tax} />\n                    <TextDetail label={'送料'} value={'¥' + shippingFee.toLocaleString()} />\n                    <Divider />\n                    <TextDetail label={'合計(税込)'} value={'¥' + total.toLocaleString()} />\n                    <PrimaryButton label={\"注文する\"} onClick={order} />\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default OrderConfirm;"]},"metadata":{},"sourceType":"module"}