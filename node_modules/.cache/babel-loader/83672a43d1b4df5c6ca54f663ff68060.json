{"ast":null,"code":"var _jsxFileName = \"/Users/yamazakikouji/Desktop/ec-app/src/components/Products/imageArea.jsx\";\nimport React, { useCallback } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\nimport { makeStyles } from '@material-ui/core';\nimport { storage } from '../../firebase/index';\nimport ImagePreview from './imagePreview';\nconst useStyles = makeStyles({\n  icon: {\n    height: 48,\n    width: 48\n  }\n});\n\nconst ImageArea = props => {\n  const classes = useStyles();\n  const deleteImage = useCallback(async id => {\n    const ret = window.confirm('この画像を削除しますか？');\n\n    if (!ret) {\n      return false;\n    } else {\n      const newImages = props.images.filter(image => image.id !== id);\n      props.setImages(newImages);\n      return storage.ref('images').child(id).delete();\n    }\n  }, [props.images]);\n  const uploadImage = useCallback(event => {\n    const file = event.target.files;\n    let blob = new Blob(file, {\n      type: \"image/jpeg\"\n    }); // Generate random 16 digits strings\n\n    const S = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n    const N = 16;\n    const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map(n => S[n % S.length]).join('');\n    const uploadRef = storage.ref('images').child(fileName);\n    const uploadTask = uploadRef.put(blob);\n    uploadTask.then(() => {\n      // Handle successful uploads on complete\n      uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n        const newImage = {\n          id: fileName,\n          path: downloadURL\n        };\n        props.setImages(prevState => [...prevState, newImage]);\n      });\n    });\n  }, [props.setImages]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-grid__list-images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, props.images.length > 0 && props.images.map(image => /*#__PURE__*/React.createElement(ImagePreview, {\n    id: image.id,\n    delete: deleteImage,\n    path: image.path,\n    key: image.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 47\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"u-text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"\\u5546\\u54C1\\u753B\\u50CF\\u3092\\u767B\\u9332\\u3059\\u308B\"), /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AddPhotoAlternateIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"u-display-none\",\n    type: \"file\",\n    id: \"image\",\n    onChange: event => uploadImage(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default ImageArea;","map":{"version":3,"sources":["/Users/yamazakikouji/Desktop/ec-app/src/components/Products/imageArea.jsx"],"names":["React","useCallback","IconButton","AddPhotoAlternateIcon","makeStyles","storage","ImagePreview","useStyles","icon","height","width","ImageArea","props","classes","deleteImage","id","ret","window","confirm","newImages","images","filter","image","setImages","ref","child","delete","uploadImage","event","file","target","files","blob","Blob","type","S","N","fileName","Array","from","crypto","getRandomValues","Uint32Array","map","n","length","join","uploadRef","uploadTask","put","then","snapshot","getDownloadURL","downloadURL","newImage","path","prevState"],"mappings":"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","sourcesContent":["import React, {useCallback} from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\nimport { makeStyles } from '@material-ui/core';\nimport { storage } from '../../firebase/index';\nimport ImagePreview from './imagePreview';\n\nconst useStyles = makeStyles({\n    icon: {\n        height: 48,\n        width: 48\n    }\n})\n\nconst ImageArea = (props) => {\n    const classes = useStyles();\n\n    const deleteImage = useCallback(async (id) => {\n        const ret = window.confirm('この画像を削除しますか？')\n        if (!ret) {\n            return false\n        } else {\n            const newImages = props.images.filter(image => image.id !== id)\n            props.setImages(newImages);\n            return storage.ref('images').child(id).delete()\n        }\n    }, [props.images])\n\n    const uploadImage = useCallback((event) => {\n        const file = event.target.files;\n        let blob = new Blob(file, { type: \"image/jpeg\" });\n    \n        // Generate random 16 digits strings\n        const S =\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n        const N =16;\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\n    \n        const uploadRef = storage.ref('images').child(fileName);\n        const uploadTask = uploadRef.put(blob);\n    \n        uploadTask.then(() => {\n            // Handle successful uploads on complete\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n                const newImage = {id: fileName, path: downloadURL};\n                props.setImages((prevState => [...prevState, newImage]))\n            });\n        })\n    }, [props.setImages]);\n\n    return(\n        <div>\n            <div className=\"p-grid__list-images\">\n                {props.images.length > 0 && (\n                    props.images.map(image => <ImagePreview id={image.id} delete={deleteImage} path={image.path} key={image.id} />)\n                )}\n            </div>\n            <div className=\"u-text-right\">\n                <span>商品画像を登録する</span>\n                <IconButton className={classes.icon}>\n                    <label>\n                        <AddPhotoAlternateIcon />\n                        <input \n                            className=\"u-display-none\" type=\"file\" id=\"image\" \n                            onChange={(event) => uploadImage(event)}\n                        />\n                    </label>\n                </IconButton>\n            </div>\n        </div>\n    )\n};\n\nexport default ImageArea;"]},"metadata":{},"sourceType":"module"}