{"ast":null,"code":"var _jsxFileName = \"/Users/yamazakikouji/Desktop/ec-app/src/components/Products/imageArea.jsx\";\nimport React, { useCallback } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\nimport { makeStyles } from '@material-ui/core';\nimport { storage } from '../../firebase/index';\nconst useStyles = makeStyles({\n  icon: {\n    height: 48,\n    width: 48\n  }\n});\n\nconst ImageArea = props => {\n  const classes = useStyles();\n  const uploadImage = useCallback(event => {\n    const file = event.target.files;\n    let blob = new Blob(file, {\n      type: \"image/jpeg\"\n    }); // Generate random 16 digits strings\n\n    const S = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n    const N = 16;\n    const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map(n => S[n % S.length]).join('');\n    const uploadRef = storage.ref('images').child(fileName);\n    const uploadTask = uploadRef.put(blob);\n    uploadTask.then(() => {\n      // Handle successful uploads on complete\n      uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n        const newImage = {\n          id: fileName,\n          path: downloadURL\n        };\n        props.setImages(prevState => [...prevState, newImage]);\n      });\n    });\n  }, [props.setImages]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"u-text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"\\u5546\\u54C1\\u753B\\u50CF\\u3092\\u767B\\u9332\\u3059\\u308B\"), /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AddPhotoAlternateIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"u-display-none\",\n    type: \"file\",\n    id: \"image\",\n    onChange: event => uploadImage(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default ImageArea;","map":{"version":3,"sources":["/Users/yamazakikouji/Desktop/ec-app/src/components/Products/imageArea.jsx"],"names":["React","useCallback","IconButton","AddPhotoAlternateIcon","makeStyles","storage","useStyles","icon","height","width","ImageArea","props","classes","uploadImage","event","file","target","files","blob","Blob","type","S","N","fileName","Array","from","crypto","getRandomValues","Uint32Array","map","n","length","join","uploadRef","ref","child","uploadTask","put","then","snapshot","getDownloadURL","downloadURL","newImage","id","path","setImages","prevState"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,OAAT,QAAwB,sBAAxB;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAC;AACzBG,EAAAA,IAAI,EAAE;AACFC,IAAAA,MAAM,EAAE,EADN;AAEFC,IAAAA,KAAK,EAAE;AAFL;AADmB,CAAD,CAA5B;;AAOA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AAEA,QAAMO,WAAW,GAAGZ,WAAW,CAAEa,KAAD,IAAW;AACvC,UAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA1B;AACA,QAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASJ,IAAT,EAAe;AAAEK,MAAAA,IAAI,EAAE;AAAR,KAAf,CAAX,CAFuC,CAIvC;;AACA,UAAMC,CAAC,GAAC,gEAAR;AACA,UAAMC,CAAC,GAAC,EAAR;AACA,UAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAWC,MAAM,CAACC,eAAP,CAAuB,IAAIC,WAAJ,CAAgBN,CAAhB,CAAvB,CAAX,EAAuDO,GAAvD,CAA4DC,CAAD,IAAKT,CAAC,CAACS,CAAC,GAACT,CAAC,CAACU,MAAL,CAAjE,EAA+EC,IAA/E,CAAoF,EAApF,CAAjB;AAEA,UAAMC,SAAS,GAAG5B,OAAO,CAAC6B,GAAR,CAAY,QAAZ,EAAsBC,KAAtB,CAA4BZ,QAA5B,CAAlB;AACA,UAAMa,UAAU,GAAGH,SAAS,CAACI,GAAV,CAAcnB,IAAd,CAAnB;AAEAkB,IAAAA,UAAU,CAACE,IAAX,CAAgB,MAAM;AAClB;AACAF,MAAAA,UAAU,CAACG,QAAX,CAAoBL,GAApB,CAAwBM,cAAxB,GAAyCF,IAAzC,CAA+CG,WAAD,IAAiB;AAC3D,cAAMC,QAAQ,GAAG;AAACC,UAAAA,EAAE,EAAEpB,QAAL;AAAeqB,UAAAA,IAAI,EAAEH;AAArB,SAAjB;AACA9B,QAAAA,KAAK,CAACkC,SAAN,CAAiBC,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeJ,QAAf,CAA9B;AACH,OAHD;AAIH,KAND;AAOH,GAnB8B,EAmB5B,CAAC/B,KAAK,CAACkC,SAAP,CAnB4B,CAA/B;AAqBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADJ,eAEI,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEjC,OAAO,CAACL,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AACI,IAAA,SAAS,EAAC,gBADd;AAC+B,IAAA,IAAI,EAAC,MADpC;AAC2C,IAAA,EAAE,EAAC,OAD9C;AAEI,IAAA,QAAQ,EAAGO,KAAD,IAAWD,WAAW,CAACC,KAAD,CAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CAFJ,CADJ,CADJ;AAgBH,CAxCD;;AA0CA,eAAeJ,SAAf","sourcesContent":["import React, {useCallback} from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\nimport { makeStyles } from '@material-ui/core';\nimport { storage } from '../../firebase/index';\n\nconst useStyles = makeStyles({\n    icon: {\n        height: 48,\n        width: 48\n    }\n})\n\nconst ImageArea = (props) => {\n    const classes = useStyles();\n\n    const uploadImage = useCallback((event) => {\n        const file = event.target.files;\n        let blob = new Blob(file, { type: \"image/jpeg\" });\n    \n        // Generate random 16 digits strings\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n        const N=16;\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\n    \n        const uploadRef = storage.ref('images').child(fileName);\n        const uploadTask = uploadRef.put(blob);\n    \n        uploadTask.then(() => {\n            // Handle successful uploads on complete\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n                const newImage = {id: fileName, path: downloadURL};\n                props.setImages((prevState => [...prevState, newImage]))\n            });\n        })\n    }, [props.setImages]);\n\n    return(\n        <div>\n            <div className=\"u-text-right\">\n                <span>商品画像を登録する</span>\n                <IconButton className={classes.icon}>\n                    <label>\n                        <AddPhotoAlternateIcon />\n                        <input \n                            className=\"u-display-none\" type=\"file\" id=\"image\" \n                            onChange={(event) => uploadImage(event)}\n                        />\n                    </label>\n                </IconButton>\n            </div>\n        </div>\n    )\n};\n\nexport default ImageArea;"]},"metadata":{},"sourceType":"module"}